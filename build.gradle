// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    apply plugin: 'cc.ifnot.version'
    def cmd = 'git rev-list HEAD --count --first-parent'
    ext.version_code = cmd.execute().text.trim().toInteger()
    ext.version_suffix = 'git rev-parse --short HEAD'.execute().text.trim()
    ext.version_name = (version_code / 100).toInteger() + ".${version_code}-${version_suffix}"

    ext.kotlin_version = '1.5.30'
    ext.flavor = "debug"

    ext.versions = [
            'androidTools': '30.0.1',
    ]

    ext.deps = [
            'lint': [
                    'core'  : "com.android.tools.lint:lint:${versions.androidTools}",
                    'api'   : "com.android.tools.lint:lint-api:${versions.androidTools}",
                    'checks': "com.android.tools.lint:lint-checks:${versions.androidTools}",
                    'tests' : "com.android.tools.lint:lint-tests:${versions.androidTools}",
            ],
    ]

    repositories {
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }

    //booster
    ext.booster_version = '2.3.3'
    ext.debug = gradle.startParameter.taskNames.any { it.contains('debug') || it.contains('Debug') }

    repositories {
        google()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/public' }
    }

    dependencies {
        classpath "com.didiglobal.booster:booster-gradle-plugin:$booster_version"

        if (!debug) {
            classpath "com.didiglobal.booster:booster-task-analyser:$booster_version"
        }
    }

}

allprojects {
    repositories {
        google()

        flatDir {
            dirs '../libs'
        }
    }
}

subprojects {
    apply plugin: 'cc.ifnot.version'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
